{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"docker-python-web Docs","text":""},{"location":"#introduction","title":"Introduction","text":"<p>This is the documentation site for <code>cal-itp/docker-python-web</code>.</p> <p><code>docker-python-web</code> is a base Docker image for Cal-ITP Python web applications.</p>"},{"location":"#features","title":"Features","text":"<ul> <li>Base image <code>python:3.12</code></li> <li>Image configured with non-<code>root</code> user (<code>calitp</code> by default)</li> <li><code>nginx</code> configured as a reverse proxy listening on container port <code>8000</code></li> <li><code>gunicorn</code> configured as a WSGI application server, communicates with <code>nginx</code> over Unix socket</li> <li><code>gunicorn</code> default configuration location in <code>$GUNICORN_CONF</code></li> <li><code>gettext</code> for use with web frameworks like Django</li> <li><code>WORKDIR</code> set to <code>/home/$USER/app</code>; <code>gunicorn</code> configuration in <code>/home/$USER/run</code></li> </ul>"},{"location":"#non-features","title":"Non-Features","text":"<ul> <li>Bring Your Own Web Framework</li> <li>see <code>benefits</code> for a <code>Django</code> example</li> <li>see <code>eligibility-server</code> for a <code>Flask</code> example</li> <li>Bring Your Own <code>CMD</code>: drop in to <code>bash</code> with the default <code>ENTRYPOINT</code>.</li> </ul>"},{"location":"#usage","title":"Usage","text":"<p>Reference one of the <code>image:tag</code> from GitHub Container Registry in a <code>Dockerfile</code>. E.g. for the <code>main</code> branch:</p> <pre><code>FROM ghcr.io/cal-itp/docker-python-web:main\n\nCOPY my_app my_app\n\nCMD \"nginx &amp;&amp; python -m gunicorn -c $GUNICORN_CONF my_app.wsgi\"\n</code></pre> <p>Or from the command line:</p> <pre><code>docker pull ghcr.io/cal-itp/docker-python-web:main\n</code></pre>"},{"location":"#development","title":"Development","text":"<p>Development for this repo is done within a Visual Studio Code devcontainer.</p> <p>Warning</p> <p>You must build the base Docker image <code>cal-itp/docker-python-web:app</code> before running the devcontainer. In a terminal, run: <pre><code>docker compose build app\n</code></pre></p> <p>Then, with the Remote - Containers extension enabled, open the folder containing this repository inside Visual Studio Code.</p>"}]}